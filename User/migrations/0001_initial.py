# Generated by Django 4.1.7 on 2023-04-13 16:20

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='VC_Codes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('vc_code', models.CharField(max_length=6, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MyAuthor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_admin', models.BooleanField(default=False)),
                ('password', models.CharField(max_length=8, validators=[django.core.validators.MinLengthValidator(4)])),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Restaurant',
            fields=[
                ('myauthor_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('address', models.CharField(max_length=255)),
                ('restaurant_image', models.ImageField(blank=True, null=True, upload_to='')),
                ('discount', models.DecimalField(blank=True, decimal_places=2, max_digits=2)),
                ('purches_counts', models.IntegerField(blank=True)),
                ('email_confirmed', models.BooleanField(default=False)),
                ('vc_code', models.CharField(max_length=6, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('User.myauthor',),
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('customer_image', models.ImageField(blank=True, null=True, upload_to='')),
                ('role', models.CharField(default='customer', max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('username', models.CharField(default=models.CharField(max_length=255), max_length=255)),
                ('phone_number', models.CharField(blank=True, max_length=11, validators=[django.core.validators.RegexValidator(message='Phone number must be entered in the format: "09123456789". Up to 15 digits allowed.', regex='^09\\d{9}$')])),
                ('gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female')], max_length=255)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('wallet_balance', models.DecimalField(decimal_places=2, default=0, max_digits=20, null=True)),
                ('author', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='customers', to=settings.AUTH_USER_MODEL)),
                ('list_of_favorites_res', models.ManyToManyField(related_name='cust_favor_list', to='User.restaurant')),
            ],
            options={
                'abstract': False,
            },
            bases=('User.myauthor',),
        ),
    ]
